---@enum ModCallbacks
ModCallbacks = {
    MC_NPC_UPDATE = 0, -- (EntityNPC NPC) | Optional Arg: EntityType - Called after an NPC is updated.
    MC_POST_UPDATE = 1, -- Callback has no arguments. Called after game update.
    MC_POST_RENDER = 2, -- Callback has no arguments. Called after game render.
    MC_USE_ITEM = 3, -- (CollectibleType ItemID, RNG RNG, EntityPlayer Player, UseFlags Flags, ActiveSlot Slot, integer CustomVarData): boolean | table, Optional Arg: CollectibleType - Called when a custom active item is used. The item RNG allows for the item's random events to be seeded. Return true to show the "use item" animation, otherwise false. If a table is returned instead of a boolean, the following fields can be set to a non-nil value for extra functionality: {Discharge: Determines whether the item should be discharged or not after being used, Remove: Determines whether the item should be removed from the player or not after being used, ShowAnim: Plays the default use animation if set to true (equivalent to simply returning true in AB+)}
    MC_POST_PEFFECT_UPDATE = 4, -- (EntityPlayer Player), Optional Arg: PlayerType - Called for each player, each frame, after the player evaluates the effects of items that must be constantly evaluated.
    MC_USE_CARD = 5, -- (Card CardID, EntityPlayer Player, UseFlags integer), Optional Arg: Card - Called when a custom card is used.
    MC_FAMILIAR_UPDATE = 6, -- (EntityFamiliar Familiar), Optional Arg: FamiliarVariant - Called every frame for each custom familiar.
    MC_FAMILIAR_INIT = 7, -- (EntityFamiliar Familiar), Optional Arg: FamiliarVariant - Called just after a custom familiar is initialized.
    MC_EVALUATE_CACHE = 8, -- (EntityPlayer Player, CacheFlag CacheFlag), Optional Arg: CacheFlag. Called one or more times when a player's stats are re-evaluated. For example, this will fire after the player picks up a collectible item that grants stats or uses a stat pill.
    MC_POST_PLAYER_INIT = 9, -- (EntityPlayer Player), Optional Arg: PlayerVariant - Called after the player is initialized.
    MC_USE_PILL = 10, -- (PillEffect PillEffectID, EntityPlayer Player, UseFlags Flags), Optional Arg: PillEffect - Called when a custom pill is used.
    MC_ENTITY_TAKE_DMG = 11, -- (Entity Entity, float Amount, integer DamageFlags, EntityRef Source, integer CountdownFrames): boolean, Optional Arg: EntityType - Called before new damage is applied. Return true or nil if the entity or player should sustain the damage, otherwise false to ignore it.
    MC_POST_CURSE_EVAL = 12, -- (integer Curses) - Curses is a bitmask containing current curses. Called after Level applied it's curses. Return the new curse bitmask. Use Isaac.GetCurseIdByName to get a custom curse
    MC_INPUT_ACTION = 13, -- (Entity Entity, InputHook InputHook, ButtonAction ButtonAction): boolean | float, Optional Arg: InputHook - This callback fires every time the game polls for a ButtonAction input, often several times per frame even for the same action. Since it has to do with polling, it fires regardless of whether or not the player is actually pressing any particular input. Return nil if you do not want to overwrite the input. If you do want to overwrite the input, then you have to return a boolean for the IS_ACTION_PRESSED (0) and IS_ACTION_TRIGGERED (1) input hooks, or a float between 0.0 and 1.0 for the GET_ACTION_VALUE (2) input hook.
    MC_LEVEL_GENERATOR = 14, -- This callback doesn't work right now and will never be called by the game!
    MC_POST_GAME_STARTED = 15, -- (boolean IsContinued) - This function gets called when you start a game. IsContinued is true when you continue a run, false when you start a new one.
    MC_POST_GAME_END = 16, -- (boolean IsGameOver) - This function gets called when the game over screen appears, or when the an ending starts playing. IsGameOver is true when you died and got a game over, false when you won and got an ending.
    MC_PRE_GAME_EXIT = 17, -- (boolean ShouldSave) - This function gets called when you quit a run. ShouldSave is true when the game would normally create a continuable save, false when it wouldn't. Called twice when the game plays an ending.
    MC_POST_NEW_LEVEL = 18, -- Callback has no arguments. This triggers after transitioning a level or stage.
    MC_POST_NEW_ROOM = 19, -- Callback has no arguments. This triggers after entering a room.
    MC_GET_CARD = 20, -- (RNG RNG, Card CurrentCard, boolean Playing, boolean Runes, boolean OnlyRunes): Card - This is used for Card Pools. Because not all cards have the same chance to spawn, use RNG for seeded random and return your card id (if you don't want to change the current card, return CurrentCard or nil). If desired, Playing (can include playing cards), Runes (can include runes), OnlyRunes (only return runes) filter can be used to make your selection.
    MC_GET_SHADER_PARAMS = 21, -- (string shaderName): table - Return a table containing a key -> value pair for custom shader parameters. Will skip remaining callbacks when returning a table.
    MC_EXECUTE_CMD = 22, -- (string cmd, string params): string - Return a string separated by \n (newline) per output line.
    MC_PRE_USE_ITEM = 23, -- (CollectibleType ItemID, RNG ItemRng, EntityPlayer Player, UseFlags Flags, ActiveSlot Slot, integer CustomVarData): boolean, Optional Arg: CollectibleType - Called before an item is used. Return true to prevent the default code of an item to be triggered. This will still discharge the item.
    MC_PRE_ENTITY_SPAWN = 24, -- (EntityType Type, integer Variant, integer SubType, const Vector Position, const Vector Velocity, const Entity Spawner, integer Seed): table{ EntityType Type, integer Variant, integer Subtype, integer Seed }
    MC_POST_FAMILIAR_RENDER = 25, -- (EntityFamiliar Familiar, Vector Offset), Optional Arg: FamiliarVariant.
    MC_PRE_FAMILIAR_COLLISION = 26, -- (EntityFamiliar Familiar, Entity Collider, boolean Low): boolean, Optional Arg: FamiliarVariant - Return true/false to ignore collision code (true to ignore collision, false to collide), or nil to continue the internal code.
    MC_POST_NPC_INIT = 27, -- (EntityNPC NPC), Optional Arg: EntityType.
    MC_POST_NPC_RENDER = 28, -- (EntityNPC NPC, Vector Offset, Optional Arg: EntityType).
    MC_POST_NPC_DEATH = 29, -- (EntityNPC NPC), Optional Arg: EntityType - Gets called after the Death animation is played.
    MC_PRE_NPC_COLLISION = 30, -- (EntityNPC NPC, Entity Collider, boolean Low): boolean, Optional Arg: EntityType - Return true/false to ignore collision code (true to ignore collision, false to collide), or nil to continue the internal code.
    MC_POST_PLAYER_UPDATE = 31, -- (EntityPlayer Player), Optional Arg: PlayerVariant.
    MC_POST_PLAYER_RENDER = 32, -- (EntityPlayer Player, Vector Offset), Optional Arg: PlayerVariant.
    MC_PRE_PLAYER_COLLISION = 33, -- (EntityPlayer Player, Entity Collider, boolean Low): boolean, Optional Arg: PlayerVariant - Return true/false to ignore collision code (true to ignore collision, false to collide), or nil to continue the internal code.
    MC_POST_PICKUP_INIT = 34, -- (EntityPickup Pickup), Optional Arg: PickupVariant.
    MC_POST_PICKUP_UPDATE = 35, -- (EntityPickup Pickup), Optional Arg: PickupVariant.
    MC_POST_PICKUP_RENDER = 36, -- (EntityPickup Pickup, Vector Offset), Optional Arg: PickupVariant.
    MC_POST_PICKUP_SELECTION = 37, -- (EntityPickup Pickup, integer Variant, integer Subtype): table{integer Variant, integer SubType} - Called after a Pickup was chosen from a list of random pickups to be spawned. Return table nil to continue with default game code.
    MC_PRE_PICKUP_COLLISION = 38, -- (EntityPickup Pickup, Entity Collider, boolean Low): boolean - Return true/false to ignore collision code (true to ignore collision, false to collide), or nil to continue the internal code.
    MC_POST_TEAR_INIT = 39, -- (EntityTear Tear), Optional Arg: TearVariant
    MC_POST_TEAR_UPDATE = 40, -- (EntityTear Tear), Optional Arg: TearVariant
    MC_POST_TEAR_RENDER = 41, -- (EntityTear Tear, Vector Offset), Optional Arg: TearVariant
    MC_PRE_TEAR_COLLISION = 42, -- (EntityTear Tear, Entity Collider, boolean Low): boolean - Return true/false to ignore collision code (true to ignore collision, false to collide), or nil to continue the internal code.
    MC_POST_PROJECTILE_INIT = 43, -- (EntityProjectile Projectile), Optional Arg: ProjectileVariant
    MC_POST_PROJECTILE_UPDATE = 44, -- (EntityProjectile Projectile), Optional Arg: ProjectileVariant
    MC_POST_PROJECTILE_RENDER = 45, -- (EntityProjectile Projectile, Vector Offset), Optional Arg: ProjectileVariant
    MC_PRE_PROJECTILE_COLLISION = 46, -- (EntityProjectile Projectile, Entity Collider, boolean Low): boolean - Return true/false to ignore collision code (true to ignore collision, false to collide), or nil to continue the internal code.
    MC_POST_LASER_INIT = 47, -- (EntityLaser Laser), Optional Arg: LaserVariant
    MC_POST_LASER_UPDATE = 48, -- (EntityLaser Laser), Optional Arg: LaserVariant
    MC_POST_LASER_RENDER = 49, -- (EntityLaser Laser, Vector Offset), Optional Arg: LaserVariant
    MC_POST_KNIFE_INIT = 50, -- (EntityKnife Knife), Optional Arg: KnifeSubType
    MC_POST_KNIFE_UPDATE = 51, -- (EntityKnife Knife), Optional Arg: KnifeSubType
    MC_POST_KNIFE_RENDER = 52, -- (EntityKnife Knife, Vector Offset), Optional Arg: KnifeSubType
    MC_PRE_KNIFE_COLLISION = 53, -- (EntityKnife Knife, Entity Collider, boolean Low): boolean, Optional Arg: KnifeSubType - Return true/false to ignore collision code (true to ignore collision, false to collide), or nil to continue the internal code.
    MC_POST_EFFECT_INIT = 54, -- (EntityEffect Effect), Optional Arg: EffectVariant
    MC_POST_EFFECT_UPDATE = 55, -- (EntityEffect Effect), Optional Arg: EffectVariant
    MC_POST_EFFECT_RENDER = 56, -- (EntityEffect Effect, Vector Offset), Optional Arg: EffectVariant
    MC_POST_BOMB_INIT = 57, -- (EntityBomb Bomb), Optional Arg: BombVariant
    MC_POST_BOMB_UPDATE = 58, -- (EntityBomb Bomb), Optional Arg: BombVariant
    MC_POST_BOMB_RENDER = 59, -- (EntityBomb Bomb, Vector Offset), Optional Arg: BombVariant
    MC_PRE_BOMB_COLLISION = 60, -- (EntityBomb Bomb, Entity Collider, boolean Low): boolean, Optional Arg: BombVariant - Return true/false to ignore collision code (true to ignore collision, false to collide), or nil to continue the internal code.
    MC_POST_FIRE_TEAR = 61, -- (EntityTear Tear) - Called when the player fires a tear.
    MC_PRE_GET_COLLECTIBLE = 62, -- (ItemPoolType PoolType, boolean Decrease, integer Seed): CollectibleType - This callback is called when the game needs to get a new random item from an item pool.
    MC_POST_GET_COLLECTIBLE = 63, -- (CollectibleType SelectedCollectible, integer PoolType, boolean Decrease, integer Seed): CollectibleType - This function is called right after MC_PRE_GET_COLLECTIBLE and determines the Collectible that will be spawned from the given ItemPoolType.
    MC_GET_PILL_COLOR = 64, -- (PillColor SelectedPill, integer Seed): PillColor - This function is called when the game is spawning a pill and needs to determine its PillColor.
    MC_GET_PILL_EFFECT = 65, -- (PillEffect SelectedPillEffect, PillColor PillColorID): PillEffect - Called every frame when the game gets the PillEffect of a pill. The effect of the pill can be chosen by returning the chosen PillEffect.
    MC_GET_TRINKET = 66, -- (TrinketType SelectedTrinket, RNG TrinketRNG): TrinketType - Called when the TrinketType of a trinket needs to be determined.
    MC_POST_ENTITY_REMOVE = 67, -- (Entity Entity), Optional Arg: EntityType - Called whenever an Entity gets removed by the game. This includes deaths, kills, removals and even unloading an entity on room transition or ending a run.
    MC_POST_ENTITY_KILL = 68, -- (Entity Entity), Optional Arg: EntityType - Called right before a death animation is triggered for an Entity.
    MC_PRE_NPC_UPDATE = 69, -- (EntityNPC NPC): boolean, Optional Arg: EntityType - Return true if the internal AI should be ignored, false or `nil`/nothing otherwise.
    MC_PRE_SPAWN_CLEAN_AWARD = 70, -- (RNG Rng, Vector SpawnPos): boolean - Return true if the spawn routine after any room clear should be ignored, false or `nil`/nothing otherwise.
    MC_PRE_ROOM_ENTITY_SPAWN = 71, -- (EntityType Type, integer Variant, integer SubType, integer GridIndex, integer Seed) - This is called when entering a new room, before spawning entities which are part its layout. Grid entities will also trigger this callback and their type will the same as the type used by the gridspawn command. Because of this, effects are assigned the type 999 instead of 1000 in this callback. Optional return: an array table with new values { Type, Variant, Subtype }. Returning a table will override any replacements that might naturally occur i.e. enemy variants.
    MC_PRE_ENTITY_DEVOLVE = 72, -- (Entity Entity) - Return true if the internal devolving behavior should be ignored - When returning true, this callback is responsible for spawning the devolved entity and removing the original one.
    MC_PRE_MOD_UNLOAD = 73, -- (table Mod) - This is called right before any mod is unloaded (when disabling a mod or reloading it using luamod), the mod's table is passed as an argument.
    MC_PRE_ADD_COLLECTIBLE = 1004, -- (CollectibleType Type, integer Charge, boolean FirstTime, integer Slot, integer VarData, EntityPlayer Player): `CollectibleType` | {Type Charge FirstTime Slot VarData Player} - Returning a `CollectibleType` overrides the collectible. You can also return a table of parameters to further modify the collectible given.
    MC_POST_ADD_COLLECTIBLE = 1005, -- (CollectibleType Type, integer Charge, boolean FirstTime, integer Slot, integer VarData, EntityPlayer Player)
    MC_POST_TAKE_DMG = 1006, -- (Entity Entity, float Damage, DamageFlags DamageFlags, EntityRef Source, integer DamageCountdown) - Leftover for backwards compatibility. Use MC_POST_ENTITY_TAKE_DMG instead.
    MC_POST_ENTITY_TAKE_DMG = 1006, -- (Entity Entity, float Damage, DamageFlags DamageFlags, EntityRef Source, integer DamageCountdown)
    MC_PRE_PLAYER_TAKE_DMG = 1008, -- (EntityPlayer Player, float Damage, DamageFlags DamageFlags, EntityRef Source, integer DamageCountdown) - Runs earlier than MC_ENTITY_TAKE_DMG, and even if the player is considered invincible or has Holy Mantles. Only accepts returning `false` to cancel the damage. Good for giving the player invincibility that takes precedence over other damage negation effects, such as Holy Mantle.
    MC_PRE_PLAYER_ADD_HEARTS = 1009, -- (EntityPlayer Player, integer Amount, AddHealthType AddHealthType, boolean ExtraArg): integer, Optional Arg: AddHealthType - Runs before Add(...)Hearts functions, allows returning a value to change the given amount of health. Functions that include an argument (e.g. ignoreKeeper for AddMaxHearts) provide the value using ExtraArg.
    MC_POST_PLAYER_ADD_HEARTS = 1010, -- (EntityPlayer Player, integer Amount, AddHealthType AddHealthType, boolean ExtraArg), Optional Arg: AddHealthType - Runs after Add(...)Hearts functions, allows returning a value to change the given amount of health. Functions that include an argument (e.g. ignoreKeeper for AddMaxHearts) provide the value using ExtraArg.
    MC_POST_GRID_ROCK_DESTROY = 1011, -- (GridEntityRock Rock, GridEntityType Type, boolean Immediate) - When adding callback, specify a GridEntityType to only respond to that one grid type.
    MC_GRID_HURT_DAMAGE = 1012, -- (GridEntity GridEntity, Entity Entity, integer DamageAmount, DamageFlags DamageFlags, float Unknown, boolean Unknown) - Return `false` if entity or player should ignore damage from it. When adding callback, specify a GridEntityType to only respond to that grid type.
    MC_POST_GRID_HURT_DAMAGE = 1013, -- (GridEntity GridEntity, Entity Entity, integer DamageAmount, DamageFlags DamageFlags, float Unknown, boolean Unknown) - Runs after MC_GRID_HURT_DAMAGE.
    MC_HUD_UPDATE = 1020, -- Callback has no arguments. Called during HUD update.
    MC_HUD_POST_UPDATE = 1021, -- Callback has no arguments. Called after HUD update.
    MC_HUD_RENDER = 1022, -- Callback has no arguments. Called during HUD render.
    MC_POST_HUD_RENDER = 1024, -- Callback has no arguments. Called after HUD render.
    MC_MAIN_MENU_RENDER = 1023, -- Callback has no arguments. Called after HUD render.
    MC_PRE_SFX_PLAY = 1030, -- (SoundEffect ID, float Volume, integer FrameDelay, boolean Loop, float Pitch, float Pan): table{ID, Volume, FrameDelay, Loop, Pitch, Pan} | boolean, Optional Arg: SoundEffect - Called before a sound plays. Accepts a table of parameters to override the sound, or `false` to cancel the sound.
    MC_POST_SFX_PLAY = 1031, -- (SoundEffect ID, float Volume, integer FrameDelay, boolean Loop, float Pitch, float Pan), Optional Arg: Sound Effect - Called after a sound plays.
    MC_PRE_MUSIC_PLAY = 1034, -- (Music ID, float Volume | float FadeRate, boolean IsFade): table{ID, Volume | FadeRate}, Optional Arg: Music - Called before a music track plays. Accepts a table of parameters to override the music, or `false` to cancel the track.
    MC_PRE_MUSIC_LAYER_TOGGLE = 1035, -- (integer ID, boolean CurrentState): integer | boolean, Optional Arg: integer - Accepts a music layer ID (enum pending) to change the layer, or a boolean to change the state of the layer: `true` to keep it running, `false` to stop it.
    MC_PRE_RENDER_PLAYER_HEAD = 1038, -- (EntityPlayer Player, Vector RenderPos): Vector | boolean, Optional Arg: PlayerType - Called before a player's head is rendered. Accepts an override Vector for RenderPos, alternatively accepts `false` to stop the rendering.
    MC_POST_RENDER_PLAYER_HEAD = 1045, -- (EntityPlayer Player, Vector RenderPos), Optional Arg: PlayerType - Called before a player's head is rendered, assuming it wasn't skipped.
    MC_PRE_RENDER_PLAYER_BODY = 1039, -- (EntityPlayer Player, Vector RenderPos): Vector | boolean, Optional Arg: PlayerType - Called before a player's body is rendered. Accepts an override Vector for RenderPos, alternatively accepts `false` to stop the rendering.
    MC_POST_RENDER_PLAYER_BODY = 1046, -- (EntityPlayer Player, Vector RenderPos), Optional Arg: PlayerType - Called before a player's body is rendered, assuming it wasn't skipped.
    MC_PRE_ENTITY_THROW = 1040, -- (EntityPlayer ThrowingPlayer, Entity HeldEntity, Vector Velocity): Vector - Called before a held entity is thrown. Accepts a Vector which will modify the velocity of the thrown entity.
    MC_POST_ENTITY_THROW = 1041, -- (EntityPlayer ThrowingPlayer, Entity HeldEntity, Vector Velocity) - Called after a held entity is thrown.
    MC_PLAYER_INIT_POST_LEVEL_INIT_STATS = 1042, -- (EntityPlayer Player), Optional Arg: PlayerType. Called after a player is initialized for the first time, being when starting the run, joining the game as a co-op player, or when activating Genesis.
    MC_PRE_ROOM_EXIT = 1043, -- (EntityPlayer Player, boolean NewLevel) - Called before exiting the current room. NewLevel is `true` if the room is transitioning into a new floor.
    MC_PRE_LEVEL_INIT = 1060, -- Callback has no arguments. Called before a new level is initialized.
    MC_PRE_TRIGGER_PLAYER_DEATH = 1050, -- (EntityPlayer Player): boolean - Called right before the game over screen. Return `false` to cancel the death, reviving the player in-place with half a heart, or true/`nil`/nothing to allow the death to go through.
    MC_PRE_RESTOCK_SHOP = 1070, -- (boolean Partial) - Return `false` to cancel the restock, blocking shop rerolls from restock machines or restocks from Restock altogether. Partial is `true` for Room::ShopRestockPartial() and Restock, `false` for Room::ShopRestockFull() and restock machines.
    MC_POST_RESTOCK_SHOP = 1071, -- (boolean Partial) - Called after a shop rerolls from restock machines or Restock. Partial is `true` for Room::ShopRestockPartial() and Restock, `false` for Room::ShopRestockFull() and restock machines.
    MC_PRE_CHANGE_ROOM = 1061, -- (integer TargetRoomIdx, integer Dimension): table{TargetRoomIdx, Dimension} - Called before the room changes. Accepts a table of parameters to change what room you enter.
    MC_POST_PICKUP_SHOP_PURCHASE = 1062, -- (EntityPickup Pickup, EntityPlayer Player, integer MoneySpent), Optional Arg: PickupVariant - Called after an item is purchased. This includes devil deals.
    MC_GET_FOLLOWER_PRIORITY = 1063, -- (EntityFamiliar Familiar): FollowerPriority | integer, Optional Arg: FamiliarVariant - Accepts FollowerPriority to give familiar priority. Can accept any integer.
    MC_PRE_NPC_MORPH = 1212, -- (EntityNPC NPC, EntityType EntityType, integer Variant, integer SubType, ChampionColor ChampionId): table{EntityType, Variant, SubType, ChampionId} | {EntityType, Variant, SubType} | boolean - Called before an NPC morphs. Accepts a table of parameters to change what entity they morph into, or `false` to cancel the morph.
    MC_PRE_PICKUP_MORPH = 1213, -- (EntityPickup Pickup, integer EntityType, integer Variant, integer SubType, boolean KeepPrice, boolean KeepSeed, boolean IgnoreModifiers): table{EntityType, Variant, SubType, KeepPrice, KeepSeed, IgnoreModifiers} | table{EntityType, Variant, SubType} | boolean - Called before a pickup is morphed. Accepts a table of parameters to change what pickup it morphs into, or `false` to cancel the morph.
    MC_POST_NPC_MORPH = 1214, -- (EntityNPC NPC, EntityType EntityType, integer Variant, integer SubType, ChampionColor ChampionId). Called after an NPC morphs, assuming it wasn't cancelled.
    MC_POST_PICKUP_MORPH = 1215, -- (EntityPickup Pickup, integer EntityType, integer Variant, integer SubType, boolean KeepPrice, boolean KeepSeed, boolean IgnoreModifiers). Called after a pickup morphs, assuming it wasn't cancelled.
    MC_PRE_COMPLETION_MARKS_RENDER = 1216, -- (Sprite CompletionMarksSprite, Vector RenderPos, Vector RenderScale, PlayerType PlayerType): boolean - Called before a character's completion marks are rendered on the character selection screen. Return `false` to prevent the completion marks from rendering.
    MC_POST_COMPLETION_MARKS_RENDER = 1217, -- (Sprite CompletionMarksSprite, Vector RenderPos, Vector RenderScale, PlayerType PlayerType) - Called before a character's completion marks are rendered on the character selection screen, assuming it wasn't skipped.
    MC_PRE_PAUSE_SCREEN_RENDER = 1218, -- (Sprite PauseBody, Sprite PauseStats): boolean - Called before the pause screen is rendered in-game. Return `false` to prevent the pause screen from rendering. Doing so will also prevent the screen from darkening.
    MC_POST_PAUSE_SCREEN_RENDER = 1219, -- (Sprite PauseBody, Sprite PauseStats): boolean - Called before the pause screen is rendered in-game, assuming it wasn't skipped.
    MC_PRE_USE_CARD = 1064, -- (Card CardID, EntityPlayer Player, integer UseFlag): boolean - Called before a card is used. Return `false` to cancel card use. This will still consume the card.
    MC_PRE_USE_PILL = 1065, -- (PillEffect PillEffectID, PillColor PillColorID, EntityPlayer Player, integer UseFlag): boolean - Called before a pill is used. Return `false` to cancel pill use. This will still consume the pill.
    MC_GET_SHOP_ITEM_PRICE = 1066, -- (integer PickupVariant, integer PickupSubType, integer ShopItemID, integer Price): PickupPrice | integer, Optional Arg: PickupVariant - Called after the price for a shop item was calculated. Return an integer or `PickupPrice` to change the price of the item.
    MC_PLAYER_GET_HEALTH_TYPE = 1067, -- (EntityPlayer Player): HealthType, Optional Arg: PlayerType - Called when getting the health type of the player. Return a `HealthType` to change the health type of the character.
    MC_PRE_ROOM_TRIGGER_CLEAR = 1068, -- (boolean PlaySound) - Called before a room is cleared.
    MC_PRE_PLAYER_TRIGGER_ROOM_CLEAR = 1069, -- (EntityPlayer Player): boolean, Optional Arg: PlayerVariant. Called before all room clear-related effects for a player is triggered. This also accounts for challenge waves. Return `false` to cancel trigger effects.
    MC_PRE_FAMILIAR_RENDER = 1080, -- (EntityFamiliar Familiar, Vector Offset): Vector | boolean, Optional Arg: FamiliarVariant - Called before a familiar is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_NPC_RENDER = 1081, -- (EntityNPC NPC, Vector Offset): Vector | boolean, Optional Arg: EntityType - Called before an NPC is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_PLAYER_RENDER = 1082, -- (EntityPlayer Player, Vector Offset): Vector | boolean, Optional Arg: PlayerVariant - Called before a player is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_PICKUP_RENDER = 1083, -- (EntityPickup Pickup, Vector Offset): Vector | boolean, Optional Arg: PickupVariant - Called before a pickup is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_TEAR_RENDER = 1084, -- (EntityTear Tear, Vector Offset): Vector | boolean, Optional Arg: TearVariant - Called before a tear is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_PROJECTILE_RENDER = 1085, -- (EntityProjectile Projectile, Vector Offset): Vector | boolean, Optional Arg: ProjectileVariant - Called before a projectile is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_KNIFE_RENDER = 1086, -- (EntityKnife Knife, Vector Offset): Vector | boolean, Optional Arg: KnifeVariant - Called before a knife is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_EFFECT_RENDER = 1087, -- (EntityEffect Effect, Vector Offset): Vector | boolean, Optional Arg: EffectVariant - Called before an effect is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_BOMB_RENDER = 1088, -- (EntityBomb Bomb, Vector Offset): Vector | boolean, Optional Arg: BombVariant - Called before a bomb is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_SLOT_RENDER = 1089, -- (EntitySlot Slot, Vector Offset): Vector | boolean, Optional Arg: SlotVariant - Called before a slot is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_POST_SLOT_RENDER = 1090, -- (EntityFamiliar Familiar, Vector Offset): Vector | boolean, Optional Arg: FamiliarVariant - Called after a familiar is rendered, assuming it wasn't skipped.
    MC_PLAYER_GET_ACTIVE_MAX_CHARGE = 1072, -- (CollectibleType ItemID, EntityPlayerPlayer, integer VarData, integer CurrentMaxCharge): integer, Optional Arg: CollectibleType - Called when getting the active charge of an active item. Return an integer to override the max charge for the active item.
    MC_PLAYER_GET_ACTIVE_MIN_USABLE_CHARGE = 1073, -- (ActiveSlot Slot, EntityPlayer Player, integer CurrentMinUsableCharge): integer, Optional Arg: CollectibleType - Called when getting the minimum charge requirement for using an active item (seen in items such as Larynx). Return an integer to override the minimum charge to use the active item.
    MC_PLAYER_GET_HEART_LIMIT = 1074, -- (EnityPlayer Player, integer HeartLimit, boolean IsKeeper): integer, Optional Arg: PlayerType - Called when getting the max amount of hearts the player can have. Return an integer to override the heart limit (1 unit equals half a heart).
    MC_POST_ITEM_OVERLAY_UPDATE = 1075, -- Callback has no arguments. Optional Arg: Giantbook - Called after an item overlay updates.
    MC_PRE_ITEM_OVERLAY_SHOW = 1076, -- (Giantbook GiantBookID, integer Delay, EntityPlayer Player): Giantbook | boolean, Optional Arg: Giantbook - Called before an item overlay is shown. Return `Giantbook` to change what Giantbook is shown or `false` to cancel it.
    MC_POST_PLAYER_NEW_ROOM_TEMP_EFFECTS = 1077, -- (EntityPlayer Player), Optional Arg: PlayerType - Called after a player's TemporaryEffects are reset after a new room.
    MC_POST_PLAYER_NEW_LEVEL = 1078, -- (EntityPlayer Player), Optional Arg: PlayerType - Called after entering a new level, but provides the player. Useful for player-specific effects on a new level.
    MC_POST_PLAYER_GET_MULTI_SHOT_PARAMS = 1251, -- (EntityPlayer Player): MultiShotParams, Optional Arg: PlayerType - Called after getting the player's MultiShotParams. Return a `MultiShotParams` object to change the properties of the players shooting behavior in regards to the MultiShotParams object properties.
    MC_PRE_REPLACE_SPRITESHEET = 1116, -- (integer LayerID, string PNGFilename): table{LayerID, PNGFilename}, Optional Arg: string ANM2Filename - Called before a Sprite object's spritesheet is replaced. Return a table of parameters to change what spritesheet is replaced.
    MC_POST_REPLACE_SPRITESHEET = 1117, -- (integer LayerID, string PNGFilename), Optional Arg: string ANM2Filename - Called after a Sprite object's spritesheet is replaced.
    MC_PRE_PLANETARIUM_APPLY_STAGE_PENALTY = 1110, -- Callback has no arguments. Start of planetarium calculation. Return `false` to bypass the normal planetarium stage penalty, such as when its at 0% for floors past Depths II/Womb II with Telescope Lens.
    MC_PRE_PLANETARIUM_APPLY_PLANETARIUM_PENALTY = 1111, -- (integer Chance): boolean - Called if on a valid stage and before applying the penalty for entering a Planetarium. Chance will be 1% (10% with Telescope Lens). Return `false` to bypass the penalty.
    MC_PRE_PLANETARIUM_APPLY_TREASURE_PENALTY = 1112, -- (integer TreasureRoomsVisited): boolean | integer - Called if no planetariums have been entered before and during calculation for applying the penalty for entering treasure rooms. Return `false` to bypass the penalty or an integer to modify how many treasure rooms the game believes have been entered. 
    MC_PRE_PLANETARIUM_APPLY_ITEMS = 1113, -- (float Chance): float - Called after checking the amount of treasure rooms entered and during calculation for applying additional planetarium chance from Crystal Ball, Magic 8 Ball, Sausage, and Telescope Lens' +15% planetarium chance. Return a float to modify the chance in this step of this calculation.
    MC_PRE_PLANETARIUM_APPLY_TELESCOPE_LENS = 1114, -- (float Chance): float - Called after checking all previous calculations steps and during calculation for applying Telescope Lens' +9% base planetarium chance. Return a float to modify the chance in this step of the calculation.
    MC_POST_PLANETARIUM_CALCULATE = 1115, -- (float Chance): float - Last step of planetarium chance calculation. Return a float to override the final chance.
    MC_POST_SLOT_INIT = 1121, -- (EntitySlot Slot), Optional Arg: SlotVariant - Called after a slot is initialized.
    MC_POST_SLOT_UPDATE = 1122, -- (EntitySlot Slot), Optional Arg: SlotVariant - Called after a slot is updated.
    MC_PRE_SLOT_CREATE_EXPLOSION_DROPS = 1123, -- (EntitySlot Slot), Optional Arg: SlotVariant - Called before a slot creates explosion drops, whether from exploding or having EntitySlot::CreateExplosionDrops() called. Return `false` to stop explosions from dropping the standard consumables.
    MC_POST_SLOT_CREATE_EXPLOSION_DROPS = 1124, -- (EntitySlot Slot), Optional Arg: SlotVariant - Called after a slot creates explosion drops, whether from exploding or having EntitySlot::CreateExplosionDrops() called, assuming it wasn't cancelled.
    MC_PRE_SLOT_SET_PRIZE_COLLECTIBLE = 1125, -- (EntitySlot Slot, CollectibleType ItemID): CollectibleType, Optional Arg: SlotVariant - Used by Shell Game, Hell Game, and Crane Game before determining the `CollectibleType` it gives on payout. Return a `CollectibleType` to override what the game will pay out with.
    MC_POST_SLOT_SET_PRIZE_COLLECTIBLE = 1126, -- (EntitySlot Slot, CollectibleType ItemID): CollectibleType, Optional Arg: SlotVariant - Used by Shell Game, Hell Game, and Crane Game for the `CollectibleType` is gives on payout.
    MC_PRE_DEVIL_APPLY_ITEMS = 1130, -- (): float - Start of devil deal calculation. Called before stage penalty and during calculation for most items that affect devil deal chance. Return a float to modify the chance in this step of the calculation.
    MC_PRE_DEVIL_APPLY_STAGE_PENALTY = 1131, -- (): boolean - Called during calculation for stage penalty. If a deal spawned anywhere on the previous two floors, the game decays the resulting chance by either 50% or 25% depending on how many deals have spawned. Return a boolean to bypass the stage penalty.
    MC_PRE_DEVIL_APPLY_SPECIAL_ITEMS = 1132, -- (): float - Called after stage penalty and during calculation for items like Goat Head and Eucharist. Return a float to modify the chance in this step of the calculation.
    MC_POST_DEVIL_CALCULATE = 1133, -- (integer Chance): float - Last step of devil deal chance calculation. Return a float to override the final chance.
    MC_COMPLETION_MARK_GET = 1047, -- (CompletionType Completion, PlayerType PlayerType): boolean, Optional Arg: PlayerType - Called when the player gets a completion mark. Return `false` to cancel the completion mark.
    MC_POST_COMPLETION_MARK_GET = 1048, -- (CompletionType Completion, PlayerType PlayerType), Optional Arg: PlayerType - Called when the player gets a completion mark, assuming it wasn't cancelled.
    MC_PRE_COMPLETION_EVENT = 1049, -- (CompletionType Completion): boolean | `CompletionType` - Triggers before a completion event gets triggered, such as when defeating a major boss or beating Boss Rush. Can return a new [CompletionType](CompletionType.md) or `false` to cancel the completion event. Canceling it will prevent all marks and completion event related stuff to trigger for all players.
    MC_POST_COMPLETION_EVENT = 1052, -- (CompletionType Completion): boolean - Triggers after a completion event gets triggered, such as when defeating a major boss or beating Boss Rush.
    MC_POST_PLAYERHUD_RENDER_ACTIVE_ITEM = 1079, -- (EntityPlayer Player, ActiveSlot Slot, Vector Offset, float Alpha, float Scale, Vector ChargeBarOffset) - Called after the player's active item is rendered.
    MC_POST_PLAYERHUD_RENDER_HEARTS = 1091, -- (Vector Offset(?), Sprite HeartsSprite, Vector Position, float Unknown, EntityPlayer Player) - Called after the player's hearts are rendered, both on the corners of the HUD and above Strawman-like players, assuming it wasn't skipped.
    MC_PRE_GET_LIGHTING_ALPHA = 1150, -- (float OriginalAlpha): float - Called when getting the alpha of the lighting in the room. Return a float to modify the lightning alpha. Generally this is between 0 and 1 but you can technically go higher than this.
    MC_PRE_RENDER_GRID_LIGHTING = 1151, -- (GridEntity GridEntity, Vector Offset) - Called before the the lighting of a grid entity is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_RENDER_ENTITY_LIGHTING = 1152, -- (Entity Entity, Vector Offset) - Called before the lighting of an entity is rendered. Return a Vector to modify render offset or `false` to cancel rendering.
    MC_PRE_PLAYER_APPLY_INNATE_COLLECTIBLE_NUM = 1092, -- (integer ModCount, EntityPlayer Player, CollectibleType Type, boolean OnlyCountTrueItems): integer - Called when getting the amount of innate items on the player. Return an integer to modify how many of a specific innate item the player has.
    MC_PRE_MUSIC_PLAY_JINGLE = 1094, -- (Music MusicID): Music | boolean, Optional Arg: Music - Called before a music jingle is played. Return `Music` to change the track or `false` to cancel the track.
    MC_POST_TRIGGER_COLLECTIBLE_REMOVED = 1095, -- (EntityPlayer Player, CollectibleType ItemID), Optional Arg: CollectibleType. Called after a collectible is removed from the player.
    MC_POST_TRIGGER_TRINKET_ADDED = 1096, -- (EntityPlayer Player, TrinketType TrinketID, boolean FirstTimePickingUp), Optional Arg: TrinketType. Called after a trinket is added to the player.
    MC_POST_TRIGGER_TRINKET_REMOVED = 1097, -- (EntityPlayer Player, TrinketType TrinketID), Optional Arg: TrinketType. Called after a trinket is removed from the player.
    MC_POST_TRIGGER_WEAPON_FIRED = 1098, -- (Vector FireDirection, integer FireAmount, Entity Owner, Weapon Weapon), Optional Arg: WeaponType - Called after a weapon is fired. A weapon can count as 'fired' while its continuously active, such as Brimstone.
    MC_POST_LEVEL_LAYOUT_GENERATED = 1099, -- (LevelGenerator LevelGen) - Called after the layout of a level is generated.
    MC_POST_NIGHTMARE_SCENE_RENDER = 1102, -- Callback has no arguments. Called after the nightmare scene transition between floors or during the interaction with Mom's Bed in Home is rendered.
    MC_POST_NIGHTMARE_SCENE_SHOW = 1103, -- (boolean IsDogmaNightmare) - Called after triggering the nightmare scene transition between floors or during the interaction with Mom's Bed in Home.
    MC_PRE_LEVEL_SELECT = 1104, -- (LevelStage Level, StageType Type): table{Level, Type} - Called when the game selects which level (also known as stage) to load, usually when the player enters a trapdoor. Return a table of parameters to change what level is loaded.
    MC_POST_WEAPON_FIRE = 1105, -- (Weapon Weapon, Vector FireDirection, boolean IsShooting, boolean IsInterpolated), Optional Arg: WeaponType - Called after every weapon update, whether the Weapon owner is actually firing or not.
    MC_PRE_BACKDROP_RENDER_WALLS = 1106, -- (ColorModifier ColorModifier) - Called the backdrop's walls are rendered.
    MC_PRE_BACKDROP_CHANGE = 1141, -- (BackdropType Type) - Accepts an integer to change BackdropType.
    MC_PRE_BACKDROP_RENDER_FLOOR = 1107, -- (ColorModifier ColorModifier) - Called before the backdrop's floor is rendered.
    MC_PRE_BACKDROP_RENDER_WATER = 1108, -- Callback has no arguments. Called before water over the floor is rendered.
    MC_POST_BACKDROP_PRE_RENDER_WALLS = 1109, -- (ColorModifier ColorModifier) - Called after the backdrop's walls are rendered.
    MC_PRE_PLAYER_USE_BOMB = 1220, -- (EntityPlayer Player): boolean, Optional Arg: PlayerVariant - Called before the player uses a bomb. Return `false` to stop the player from using a bomb. This will still consume the bomb.
    MC_POST_PLAYER_USE_BOMB = 1221, -- (EntityPlayer Player): boolean, Optional Arg: PlayerVariant - Called after the player uses a bomb, assuming it hasn't been cancelled.
    MC_NPC_PICK_TARGET = 1222, -- (EntityNPC NPC, Entity CurrentTarget): Entity, Optional Arg: EntityType - Called whenever an EntityNPC selects its target, such as when EntityNPC:GetPlayerTarget() is called.
    MC_POST_PLAYER_COLLISION = 1231, -- (EntityPlayer Player, Entity Collider, boolean Low), Optional Arg: PlayerVariant - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_POST_TEAR_COLLISION = 1233, -- (EntityTear Tear, Entity Collider, boolean Low), Optional Arg: TearVariant - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_POST_FAMILIAR_COLLISION = 1235, -- (EntityFamiliar Familiar, Entity Collider, boolean Low), Optional Arg: FamiliarVariant - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_POST_BOMB_COLLISION = 1237, -- (EntityBomb Bomb, Entity Collider, boolean Low), Optional Arg: BombVariant - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_POST_PICKUP_COLLISION = 1239, -- (EntityPickup Pickup, Entity Collider, boolean Low), Optional Arg: PickupVariant - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_PRE_SLOT_COLLISION = 1240, -- (EntitySlot, Entity Collider, boolean Low): boolean, Optional Arg: SlotVariant  - Return a boolean to ignore collision code (`true` to respond to collision, `false` to not), or nil to continue the internal code.
    MC_POST_SLOT_COLLISION = 1241, -- (EntitySlot Slot, Entity Collider, boolean Low), Optional Arg: SlotVariant - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_POST_KNIFE_COLLISION = 1243, -- (EntityKnife Knife, Entity Collider, boolean Low), Optional Arg: KnifeSubType - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_POST_PROJECTILE_COLLISION = 1245, -- (EntityProjectile Projectile, Entity Collider, boolean Low), Optional Arg: ProjectileVariant - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_POST_NPC_COLLISION = 1247, -- (EntityNPC NPC, Entity Collider, boolean Low), Optional Arg: EntityType - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_PRE_LASER_COLLISION = 1248, -- (EntityLaser Laser, Entity Collider, boolean Low): boolean, Optional Arg: LaserVariant - Runs after the on-collision code of this entity. Return `true` to ignore the collision
    MC_POST_LASER_COLLISION = 1249, -- (EntityLaser Laser, Entity Collider, boolean Low), Optional Arg: LaserVariant - Runs after the on-collision code of this entity, assuming it wasn't skipped.
    MC_CONSOLE_AUTOCOMPLETE = 1120, -- (string Command, string Params): table, Optional Arg: string Command - Called whenever a function with the CUSTOM AutocompleteType enum is being entered into the console. Called every time the console input changes.
    MC_PLAYER_INIT_PRE_LEVEL_INIT_STATS = 1127, -- (EntityPlayer Player), Optional Arg: PlayerType. Called before a player is initialized for the first time, being when starting the run, joining the game as a co-op player, or when activating Genesis.
    MC_PRE_NEW_ROOM = 1200, -- (Room Room, RoomDescriptor Descriptor) - Called before entering a new room.
    MC_PRE_MEGA_SATAN_ENDING = 1201, -- (): boolean - Called right before Mega Satan forcibly ends the game. Return `true` to suppress the ending, guaranteeing a portal to the Void while retaining the completion mark for active characters.
    MC_POST_MODS_LOADED = 1210, -- Callback has no arguments. Called after all Lua scripts have been loaded. Ideal for running code that is expected to run after all mods are initialized, but without the need for load order idiocy!
    MC_POST_ITEM_OVERLAY_SHOW = 1134, -- (Giantbook GiantBookID, integer Delay, EntityPlayer Player), Optional Arg: Giantbook - Called after an item overlay is shown, assuming it wasn't cancelled.
    MC_PRE_RENDER = 1135, -- Callback has no arguments. Gets called right before the Manager::Render() function gets called.
    MC_PRE_OPENGL_RENDER = 1136, -- (VertexBuffer VertexBuffer, integer ShaderID, RenderContext Unknown): Unknown - Gets called right before the Manager::Render() function gets called.
    MC_PRE_LEVEL_PLACE_ROOM = 1137, -- (LevelGeneratorRoom Slot, RoomConfigRoom RoomConfig, integer Seed): RoomConfigRoom - Called before a room is placed during level generation. Return `RoomConfigRoom` to change the room being placed.
    MC_PRE_M_MORPH_ACTIVE = 1190, -- (EntityPlayer Player, CollectibleType ItemID): CollectibleType | boolean - Called before an active gets rerolled by 'M (trinket id 138). Return `CollectibleType` to change the CollectibleType it rerolls into or `false` to prevent the active from being rerolled entirely.
    MC_PRE_NPC_SPLIT = 1191, -- (EntityNPC NPC, boolean IsBlacklisted), Optional Arg: EntityType - Called when the game is about to decide whether or not an EntityNPC can be split, i.e. the Meat Cleaver effect. Return `true` to prevent the split, `false` to allow it even if blacklisted, or `nil` to continue default behavior.
    MC_PICKUP_GET_COIN_VALUE = 1250, -- (EntityPickup Pickup): integer, Optional Arg: CoinSubType - Called when getting the coin value of a coin pickup. Return an integer to modify the amount of coins the coin can give you on pickup.
    MC_POST_FAMILIAR_FIRE_PROJECTILE = 1252, -- (EntityTear Tear), Optional Arg: FamiliarVariant - Called when a familiar fires a tear. (Is this just for Weapon familiars or all familiars??)
    MC_POST_FIRE_BOMB = 1253, -- (EntityBomb Bomb) - Called when the player fires a Dr. Fetus bomb.
    MC_POST_FIRE_BONE_CLUB = 1254, -- (EntityKnife Knife) - Called when the player fired The Forgotten's bone club. This is only called when the club is initially spawned, not when swung or charged and shot.
    MC_POST_FIRE_BRIMSTONE = 1255, -- (EntityLaser Laser) - Called when the player fires a brimstone laser. This is also called for delayed Brimstone.
    MC_POST_FIRE_BRIMSTONE_BALL = 1256, -- (EntityEffect Effect) - Called when the player fires a brimstone ball.
    MC_POST_FIRE_KNIFE = 1257, -- (EntityKnife Knife) - Called when the player fires the knife from Mom's Knife. This is only called when the knife is initially spawned, not when charged and shot.
    MC_POST_FIRE_SWORD = 1258, -- (EntityKnife Knife) - Called when the player swings the sword from Spirit Sword. This is not called for the sword's charged swing.
    MC_POST_FIRE_TECH_LASER = 1259, -- (EntityLaser Laser) - Called when the player fires a Tech laser.
    MC_POST_FIRE_TECH_X_LASER = 1260, -- (EntityLaser Laser) - Called when the player fires a Tech X laser.
    MC_POST_FAMILIAR_FIRE_BRIMSTONE = 1261, -- (EntityLaser Laser), Optional Arg: FamiliarVariant - Called when a familiar fires a brimstone laser.
    MC_POST_FAMILIAR_FIRE_TECH_LASER = 1262, -- (EntityLaser Laser), Optional Arg: FamiliarVariant - Called when a familiar fires a Tech laser.
    MC_IS_PERSISTENT_ROOM_ENTITY = 1263, -- (EntityType Type, int Variant): boolean - Return `true` to allow the entity to respawn when moving out and back into the room it was located in.
    MC_PRE_PLAYERHUD_TRINKET_RENDER = 1264, -- (integer Slot, Vector Position, float Scale, EntityPlayer Player, Vector CropOffset): table{Position, Scale, CropOffset} | boolean, Optional Arg: integer - Called before the player's trinket on the HUD is rendered. Return a table with any combination of its parameters to override those respective fields or `true` to cancel rendering.
    MC_MENU_INPUT_ACTION = 1464, -- (Entity Entity, InputHook InputHook, ButtonAction ButtonAction): boolean | float, Optional Arg: InputHook - Same as MC_INPUT_ACTION, but only works in the main menu.
    MC_POST_SAVESLOT_LOAD = 1465, -- (integer SaveSlot, boolean IsSaveSlotSelected, integer RawSlot) - This is called whenever a save slot is loaded by the game. 
    MC_PRE_PICKUP_VOIDED = 1265, -- (EntityPickup Pickup, boolean IsBlackRune): boolean, Optional Arg: PickupVariant - Called when a pickup is consumed with the Void active or Black Rune. The IsBlackRune parameter indicates the source. If Black Rune is used, the callback gets fired both for pedestal items and for small pickups that turn into flies. Return `false` to cancel the pickup getting consumed.
    MC_PRE_PICKUP_VOIDED_ABYSS = 1266, -- (EntityPickup Pickup): boolean, Optional Arg: PickupVariant - Called when a pickup is consumed with the Abyss active. Return `false` to cancel the pickup getting consumed.
    MC_PRE_PICKUP_COMPOSTED = 1267, -- (EntityPickup Pickup) - Called when a pickup is consumed with the Compost active. Return `false` to cancel the pickup getting consumed.
    MC_PRE_GRID_ENTITY_DECORATION_UPDATE = 1400, -- (GridEntityDecoration Decoration): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_DECORATION_UPDATE = 1401, -- (GridEntityDecoration Decoration), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_DOOR_UPDATE = 1402, -- (GridEntityDoor Door): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_DOOR_UPDATE = 1403, -- (GridEntityDoor Door), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_FIRE_UPDATE = 1404, -- (GridEntityFire Fire): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_FIRE_UPDATE = 1405, -- (GridEntityFire Fire), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_GRAVITY_UPDATE = 1406, -- (GridEntityGravity Gravity): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_GRAVITY_UPDATE = 1407, -- (GridEntityGravity Gravity), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_LOCK_UPDATE = 1408, -- (GridEntityLock Lock): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_LOCK_UPDATE = 1409, -- (GridEntityLock Lock), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_PIT_UPDATE = 1410, -- (GridEntityPit Pit): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_PIT_UPDATE = 1411, -- (GridEntityPit Pit), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_POOP_UPDATE = 1412, -- (GridEntityPoop Poop): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_POOP_UPDATE = 1413, -- (GridEntityPoop Poop), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_PRESSUREPLATE_UPDATE = 1414, -- (GridEntityPressurePlate PressurePlate): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_PRESSUREPLATE_UPDATE = 1415, -- (GridEntityPressurePlate PressurePlate), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_ROCK_UPDATE = 1416, -- (GridEntityRock Rock): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_ROCK_UPDATE = 1417, -- (GridEntityRock Rock), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_SPIKES_UPDATE = 1418, -- (GridEntitySpikes Spikes): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_SPIKES_UPDATE = 1419, -- (GridEntitySpikes Spikes), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_STAIRCASE_UPDATE = 1420, -- (GridEntityStaircase Staircase): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_STAIRCASE_UPDATE = 1421, -- (GridEntityStaircase Staircase), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_STATUE_UPDATE = 1422, -- (GridEntityStatue Statue): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_STATUE_UPDATE = 1423, -- (GridEntityStatue Statue), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_TELEPORTER_UPDATE = 1424, -- (GridEntityTeleporter Teleporter): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_TELEPORTER_UPDATE = 1425, -- (GridEntityTeleporter Teleporter), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_TRAPDOOR_UPDATE = 1426, -- (GridEntityTrapdoor Trapdoor): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_TRAPDOOR_UPDATE = 1427, -- (GridEntityTrapdoor Trapdoor), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_WEB_UPDATE = 1428, -- (GridEntityWeb Web): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_WEB_UPDATE = 1429, -- (GridEntityWeb Web), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_TNT_UPDATE = 1430, -- (GridEntityTNT TNT): boolean, Optional Arg: GridEntityType - Called before this grid entity is updated. Return `false` to cancel the update.
    MC_POST_GRID_ENTITY_TNT_UPDATE = 1431, -- (GridEntityTNT TNT), Optional Arg: GridEntityType - Called after this grid entity is updated, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_SPIKES_RENDER = 1432, -- (GridEntitySpikes Spikes, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_SPIKES_RENDER = 1433, -- (GridEntitySpikes Spikes, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_WEB_RENDER = 1434, -- (GridEntityWeb Web, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_WEB_RENDER = 1435, -- (GridEntityWeb Web, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_TNT_RENDER = 1436, -- (GridEntityTNT TNT, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_TNT_RENDER = 1437, -- (GridEntityTNT TNT, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_TRAPDOOR_RENDER = 1438, -- (GridEntityTrapdoor Trapdoor, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_TRAPDOOR_RENDER = 1439, -- (GridEntityTrapdoor Trapdoor, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_STAIRCASE_RENDER = 1440, -- (GridEntityStaircase Staircase, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_STAIRCASE_RENDER = 1441, -- (GridEntityStaircase Staircase, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_DECORATION_RENDER = 1444, -- (GridEntityDecoration Decoration, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_DECORATION_RENDER = 1445, -- (GridEntityDecoration Decoration, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_DOOR_RENDER = 1446, -- (GridEntityDoor Door, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_DOOR_RENDER = 1447, -- (GridEntityDoor Door, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_FIRE_RENDER = 1448, -- (GridEntityFire Fire, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_FIRE_RENDER = 1449, -- (GridEntityFire Fire, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_LOCK_RENDER = 1450, -- (GridEntityLock Lock, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_LOCK_RENDER = 1451, -- (GridEntityLock Lock, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_TELEPORTER_RENDER = 1452, -- (GridEntityTeleporter Teleporter, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_TELEPORTER_RENDER = 1453, -- (GridEntityTeleporter Teleporter, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_PIT_RENDER = 1454, -- (GridEntityPit Pit, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_PIT_RENDER = 1455, -- (GridEntityPit Pit, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_POOP_RENDER = 1456, -- (GridEntityPoop Poop, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_POOP_RENDER = 1457, -- (GridEntityPoop Poop, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_ROCK_RENDER = 1458, -- (GridEntityRock Rock, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_ROCK_RENDER = 1459, -- (GridEntityRock Rock, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_PRESSUREPLATE_RENDER = 1460, -- (GridEntityPressurePlate PressurePlate, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_PRESSUREPLATE_RENDER = 1461, -- (GridEntityPressurePlate PressurePlate, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_PRE_GRID_ENTITY_WALL_RENDER = 1462, -- (GridEntityWall Wall, Vector Offset): Vector | boolean, Optional Arg: GridEntityType - Called before this grid entity is rendered. Return `false` to cancel the render.
    MC_POST_GRID_ENTITY_WALL_RENDER = 1463, -- (GridEntityWall Wall, Vector Offset), Optional Arg: GridEntityType - Called after this grid entity is rendered, assuming it wasn't skipped.
    MC_POST_NPC_DARK_RED_CHAMPION_REGEN = 1223, -- (EntityNPC NPC) - Runs right after a dark red champion regenerates out of the goo form.
    MC_POST_ACHIEVEMENT_UNLOCK = 1476, -- (AchievementID Achievement), Optional Arg: Achievement - Called after an achievement is unlocked.
    MC_PRE_MINIMAP_UPDATE = 1477, -- Callback has no arguments. Called right before the minimap is updated
    MC_POST_MINIMAP_UPDATE = 1478, -- Callback has no arguments. Called right after the minimap is updated
    MC_PRE_MINIMAP_RENDER = 1479, -- Callback has no arguments. Called right before the minimap is rendered
    MC_POST_MINIMAP_RENDER = 1480, -- Callback has no arguments. Called right after the minimap is rendered
    MC_PRE_PICKUP_GET_LOOT_LIST = 1333, -- (EntityPickup Pickup, boolean ShouldAdvance): LootList - Called before the pickup determines its loot content. Return `LootList` to change loot content.
    MC_PRE_PICKUP_UPDATE_GHOST_PICKUPS = 1334, -- (EntityPickup Pickup) - Called before a ghost pickup of the loot content is applied to the pickup. Return `true` to apply pickup ghost to your pickup entity, `false` to cancel it.
    MC_POST_PLAYER_TRIGGER_EFFECT_REMOVED = 1268, -- (EntityPlayer Player, ItemConfigItem ItemConfigItem) - Called after the player's `ItemConfigItem` TemporaryEffect is removed
    MC_POST_ROOM_TRIGGER_EFFECT_REMOVED = 1269, -- (ItemConfigItem ItemConfigItem) - Called after the room's `TemporaryEffects` is removed. Room has its own `TemporaryEffects` that are accessed through `Room::GetEffects()`
    MC_PRE_PLAYER_GRID_COLLISION = 1171, -- (EntityPlayer Player, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: PlayerVariant - Called before this entity collides with a GridEntity or other solid grid tile. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PLAYER_GRID_COLLISION = 1172, -- (EntityPlayer Player, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: PlayerVariant - Called when this entity collides with a `GridEntity`, assuming it wasn't skipped. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PRE_TEAR_GRID_COLLISION = 1173, -- (EntityTear Tear, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: TearVariant - Called before this entity collides with a GridEntity or other solid grid tile. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_TEAR_GRID_COLLISION = 1174, -- (EntityTear Tear, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: TearVariant - Called when this entity collides with a `GridEntity`, assuming it wasn't skipped. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PRE_FAMILIAR_GRID_COLLISION = 1175, -- (EntityFamiliar Familiar, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: FamiliarVariant - Called before this entity collides with a GridEntity or other solid grid tile. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_FAMILIAR_GRID_COLLISION = 1176, -- (EntityFamiliar Familiar, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: FamiliarVariant - Called when this entity collides with a `GridEntity`, assuming it wasn't skipped. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PRE_BOMB_GRID_COLLISION = 1177, -- (EntityBomb Bomb, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: BombVariant - Called before this entity collides with a GridEntity or other solid grid tile. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_BOMB_GRID_COLLISION = 1178, -- (EntityBomb Bomb, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: BombVariant - Called when this entity collides with a `GridEntity`, assuming it wasn't skipped. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PRE_PICKUP_GRID_COLLISION = 1179, -- (EntityPickup Pickup, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: PickupVariant - Called before this entity collides with a GridEntity or other solid grid tile. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PICKUP_GRID_COLLISION = 1180, -- (EntityPickup Pickup, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: PickupVariant - Called when this entity collides with a `GridEntity`, assuming it wasn't skipped. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PRE_PROJECTILE_GRID_COLLISION = 1181, -- (EntityProjectile Projectile, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: ProjectileVariant - Called before this entity collides with a GridEntity or other solid grid tile. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PROJECTILE_GRID_COLLISION = 1182, -- (EntityProjectile Projectile, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: ProjectileVariant - Called when this entity collides with a `GridEntity`, assuming it wasn't skipped. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PRE_NPC_GRID_COLLISION = 1183, -- (EntityNPC NPC, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: EntityType - Called before this entity collides with a GridEntity or other solid grid tile. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_NPC_GRID_COLLISION = 1184, -- (EntityNPC NPC, integer GridIndex, GridEntity | nil GridEntity): boolean, Optional Arg: EntityType - Called when this entity collides with a `GridEntity`, assuming it wasn't skipped. `GridEntity` can be nil, as entities may collide with "empty" grid indexes if the GridPath value is >= 1000. Return `true` to ignore collision
    MC_PRE_PLAYERHUD_RENDER_HEARTS = 1118, -- (Vector Offset(?), Sprite HeartsSprite, Vector Position, float Unknown, EntityPlayer Player): boolean - Called before the player's hearts are rendered, both on the corners of the HUD and above Strawman-like players. Return `true` to cancel hearts HUD rendering.
    MC_PRE_PLAYERHUD_RENDER_ACTIVE_ITEM = 1119, -- (EntityPlayer Player, ActiveSlot Slot, Vector Offset, float Alpha, float Scale, Vector ChargeBarOffset) - Called before the player's active item is rendered. Return `true` to cancel rendering.
    MC_PRE_PLAYER_REVIVE = 1481, -- (EntityPlayer Player) - Called before the player revives. Return `false` to prevent the player from reviving.
    MC_POST_PLAYER_REVIVE = 1482, -- (EntityPlayer Player) - Called after the player revives, assuming it wasn't cancelled.
    MC_POST_PROJECTILE_DEATH = 1032, -- (EntityProjectile Projectile), Optional Arg: ProjectileVariant - Called after the projectile dies.
    MC_POST_TEAR_DEATH = 1032, -- (EntityTear Tear), Optional Arg: TearVariant - Called after the tear dies.
    MC_POST_BOSS_INTRO_SHOW = 1270, -- (BossType BossID1, BossType BossID2) - Called right after the boss intro is initialized. `BossID2` is for Double Trouble.
    MC_POST_ROOM_TRANSITION_UPDATE = 1271, -- Callback has no arguments. Called on an update frame during the boss intro.
    MC_POST_ROOM_TRANSITION_RENDER = 1272, -- Callback has no arguments. Called on a render frame during the boss intro.
    MC_PRE_PLAYER_UPDATE = 1160, -- (EntityPlayer Player), Optional Arg: PlayerVariant - Called before the player is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_PRE_TEAR_UPDATE = 1161, -- (EntityTear Tear), Optional Arg: TearVariant - Called before the tear is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_PRE_FAMILIAR_UPDATE = 1162, -- (EntityFamiliar Familiar), Optional Arg: FamiliarVariant - Called before the familiar is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_PRE_BOMB_UPDATE = 1163, -- (EntityBomb Bomb), Optional Arg: BombVariant - Called before the bomb is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_PRE_PICKUP_UPDATE = 1164, -- (EntityPickup Pickup), Optional Arg: PickupVariant - Called before the pickup is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_PRE_KNIFE_UPDATE = 1165, -- (EntityKnife Knife), Optional Arg: KnifeSubType - Called before the knife is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_PRE_PROJECTILE_UPDATE = 1166, -- (EntityProjectile Projectile), Optional Arg: ProjectileVariant - Called before the projectile is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_PRE_LASER_UPDATE = 1167, -- (EntityLaser Laser), Optional Arg: LaserVariant - Called before the laser is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_PRE_EFFECT_UPDATE = 1168, -- (EntityEffect Effect), Optional Arg: EffectVariant - Called before the effect is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_PRE_SLOT_UPDATE = 1169, -- (EntitySlot Slot), Optional Arg: SlotVariant - Called before the slot is updated. Return `true` if the internal AI should be ignored, `false` or `nil`/nothing otherwise.
    MC_TRIGGER_PLAYER_DEATH_POST_CHECK_REVIVES = 1051, -- (EntityPlayer Player) - Called upon player death after the game is done checking for vanilla revives. Return `false` to cancel the death, reviving the player in-place with half a heart, or `true`/`nil`/nothing to allow the death to go through.
    MC_PRE_FORTUNE_DISPLAY = 1483, -- Callback has no arguments. Called before a fortune is displayed. Return false to cancel it.
    MC_PRE_ITEM_TEXT_DISPLAY = 1484, -- (string Title, string Subtitle, boolean IsSticky, boolean IsCurseDisplay): boolean - Called before an item text is displayed. `IsSticky` is `true` is if the item text stays on screen for an indefinite amount of time, namely when holding down the map key. `IsCurseDisplay` is `true` if the text is for displaying a curse. Return `false` to cancel showing the item text.
    MC_PRE_GET_RANDOM_ROOM_INDEX = 1290, -- (integer RoomIndex, bool IAmErrorRoom, integer Seed): integer - Called when the game wishes to get a random available room index on the floor. Return an integer to override the target room index.
    MC_POST_GLOWING_HOURGLASS_SAVE = 1300, -- (integer Slot) - Called after the Glowing Hourglass state is saved.
    MC_POST_GLOWING_HOURGLASS_LOAD = 1301, -- (integer Slot) - Called after the Glowing Hourglass state is loaded.
    MC_PRE_GLOWING_HOURGLASS_SAVE = 1302, -- (integer Slot) - Called before the Glowing Hourglass state is saved.
    MC_PRE_GLOWING_HOURGLASS_LOAD = 1303, -- (integer Slot) - Called before the Glowing Hourglass state is loaded
    MC_PRE_PLAYER_ADD_CARD = 1350, -- (EntityPlayer Player, Card CardID, PillCardSlot Slot): boolean | int, Optional Arg: Card - Called before a card gets added to the player's inventory. Return `Card` to change the card being added or `false` to cancel adding it entirely.
    MC_POST_PLAYER_ADD_CARD = 1351, -- (EntityPlayer Player, Card CardID, PillCardSlot Slot), Optional Arg: Card - Called after a card gets added to the player's inventory.
    MC_PRE_PLAYER_ADD_PILL = 1352, -- (EntityPlayer Player, PillColor PillColor, PillCardSlot Slot): boolean | int, Optional Arg: PillColor - Called before a pill gets added to the player's inventory. Return `PillColor` to change the pill being added or `false` to cancel adding it entirely.
    MC_POST_PLAYER_ADD_PILL = 1353, -- (EntityPlayer Player, PillColor PillColor, PillCardSlot Slot), Optional Arg: PillColor - Called after a pill gets added to the player's inventory.
    MC_POST_PLAYER_REMOVE_CARD = 1354, -- (EntityPlayer Player, Card CardID, PillCardSlot Slot), Optional Arg: Card - Called after a card gets removed from the player's inventory by any means (dropped, direct removal, use, etc).
    MC_POST_PLAYER_REMOVE_PILL = 1355, -- (EntityPlayer Player, PillColor PillColor, PillCardSlot Slot), Optional Arg: PillColor - Called after a pill gets removed from the player's inventory by any means (dropped, direct removal, use, etc).
    MC_PRE_PLAYER_COLLECT_CARD = 1356, -- (EntityPlayer Player, EntityPickup Pickup): boolean, Optional Arg: Card - Called before a player picks up a card off the ground. Return `false` to prevent the card from being picked up.
    MC_POST_PLAYER_COLLECT_CARD = 1357, -- (EntityPlayer Player, EntityPickup Pickup), Optional Arg: Card - Called after a player picks up a card off the ground.
    MC_PRE_PLAYER_COLLECT_PILL = 1358, -- (EntityPlayer Player, EntityPickup Pickup): boolean, Optional Arg: PillColor - Called before a player picks up a pill off the ground. Return `false` to prevent the pill from being picked up.
    MC_POST_PLAYER_COLLECT_PILL = 1359, -- (EntityPlayer Player, EntityPickup Pickup), Optional Arg: PillColor - Called after a player picks up a pill off the ground.
    MC_POST_PLAYER_DROP_CARD = 1360, -- (EntityPlayer Player, EntityPickup Pickup, PillCardSlot Slot), Optional Arg: Card - Called after a player drops a card onto the ground from their inventory.
    MC_POST_PLAYER_DROP_PILL = 1361, -- (EntityPlayer Player, EntityPickup Pickup, PillCardSlot Slot), Optional Arg: PillColor - Called after a player drops a pill onto the ground from their inventory.
    MC_PRE_CHALLENGE_DONE = 1471, -- (Challenge ChallengeID, EntityPlayer Player): boolean, Optional Arg: Challenge - Called before a challenge is marked as completed. Return `false` to prevent further execution of the challenge completion-tracking function.
    MC_POST_CHALLENGE_DONE = 1472, -- (Challenge ChallengeID), Optional Arg: Challenge - Called after a challenge is marked as completed.
    MC_PRE_PLAYER_GIVE_BIRTH_CAMBION = 1474, -- (EntityPlayer Player, ConceptionFamiliarFlag Flag): boolean, Optional Arg: ConceptionFamiliarFlag - Called before the player gives birth to a familiar through the Cambion Conception collectible. Return `false` to cancel adding the familiar.
    MC_PRE_PLAYER_GIVE_BIRTH_IMMACULATE = 1475, -- (EntityPlayer Player, ConceptionFamiliarFlag Flag): boolean, Optional Arg: ConceptionFamiliarFlag - Called before the player gives birth to a familiar through the Immaculate Conception collectible. Return `false` to cancel adding the familiar.
    MC_PRE_PLAYER_ADD_COSTUME = 1281, -- (ItemConfigItem itemConfig, EntityPlayer Player, boolean ItemStateOnly): ItemConfigItem | boolean - Called before the costume is added to the player. Return `ItemConfigItem` to replace the costume or `true` to cancel adding it entirely.
    MC_PRE_PLAYER_REMOVE_COSTUME = 1282, -- (ItemConfigItem itemConfig, EntityPlayer Player): boolean - Called before the costume is removed from the player. Return `true` to cancel the removal.
    MC_POST_PLAYER_ADD_COSTUME = 1283, -- (ItemConfigItem itemConfig, EntityPlayer Player, boolean ItemStateOnly) - Called after the costume is added to the player, assuming it wasn't skipped.
    MC_POST_PLAYER_REMOVE_COSTUME = 1284, -- (ItemConfigItem itemConfig, EntityPlayer Player): boolean - Called after the costume is removed from the player, assuming it wasn't skipped.
    MC_POST_FORCE_PILL_EFFECT = 1129, -- (PillEffect PillEffectID, PillColor PillColorID) - TODO: Document me!
    MC_EVALUATE_CUSTOM_CACHE = 1224, -- (EntityPlayer Player, CustomCacheTag string, float Value): float, Optional Arg: CustomCacheTag - Called when a custom cache tag is evaluated. Return a number to modify the value. Modified values are passed onto the next callback.
    MC_EVALUATE_FAMILIAR_MULTIPLIER = 1225, -- (EntityFamiliar Familiar, float Mult, EntityPlayer Player): float, Optional Arg: FamiliarVariant. Called when a familiar's cached multiplier needs to be re-evaluated. Return a number to modify the multiplier. Modified values are passed to the next callback.
}
